variable "name" {
  description = "Base Name for all resources (preferably generated by terraform-null-label)"
  type        = string
  default     = "stackx-network"
}

variable "tags" {
  description = "User specific Tags / Labels to attach to resources (will be merged with module tags)"
  type        = map(string)
  default     = {}
}

# --------------------------------------------------------------------------
# Important Settings
# --------------------------------------------------------------------------
variable "k8s" {
  description = "Enable / Disable usage for Kubernetes (adding tags to subnets and resources, increase private subnetes size)"
  type        = bool
  default     = true
}

variable "workspace_name" {
  description = "Unique Workspace Name for naming / tagging"
  type        = string
}

variable "cluster_name" {
  description = "EKS Cluster name to add in tags for ELB and cluster-autoscaler / karpenter discovery of subnets / VPC"
  type        = string
  default     = "stackx"
  validation {
    condition     = length(var.cluster_name) < 100
    error_message = "Cluster Name can not exceeed 100 characters."
  }
}

variable "ipv6" {
  description = "Enable / Disable IPv6 in your VPC and subnets"
  type        = bool
  default     = true
}

variable "single_nat_gateway" {
  description = "Should be true if you want to provision a single shared NAT Gateway across all of your private networks (cost efficiency)"
  type        = bool
  default     = false
}

# --------------------------------------------------------------------------
# VPC
# --------------------------------------------------------------------------
variable "region" {
  description = "AWS Region (e.g. `eu-central-1`)"
  type        = string
  default     = "eu-central-1"
  validation {
    condition     = contains(["eu-central-1", "eu-west-2", "us-east-1", "us-west-2", "ap-east-1", "ap-southeast-1", "ap-southeast-2"], var.region)
    error_message = "AWS Region you selected is invalid or not enabled."
  }
}

variable "zones" {
  description = "Number of AWS Availability Zones to use for every subnet"
  type        = number
  default     = 3
  validation {
    condition     = contains([1, 2, 3], var.zones)
    error_message = "Number of AZs must be one of `1`, `2` or `3`."
  }
}

variable "az_number" {
  # Assign a number to each AZ letter used in our configuration
  default = {
    a = 1
    b = 2
    c = 3
    d = 4
    e = 5
    f = 6
  }
}

variable "region_number" {
  # Arbitrary mapping of region name to number to use in a VPC's CIDR prefix.
  default = {
    eu-central-1   = 1
    eu-west-2      = 2
    us-east-1      = 3
    us-west-2      = 4
    ap-east-1      = 5
    ap-southeast-1 = 6
    ap-southeast-2 = 7
  }
}

variable "vpc_cidr_add" {
  description = "Add this number to the VPC CIDR to allow for multiple same region VPCs with different CIDRs"
  default     = 0
  type        = number
  validation {
    condition     = var.vpc_cidr_add < 10
    error_message = "The number to add to the VPC CIDR subnet mask must be >10 (to not conflict with other default region CIDRs - see `var.region_number`)."
  }

}

# --------------------------------------------------------------------------
# VPC Endpoints
# --------------------------------------------------------------------------
variable "cache_endpoints" {
  description = "Enable / Disable VPC Endpoints for Cache Subnets"
  type        = bool
  default     = false
}

variable "db_endpoints" {
  description = "Enable / Disable VPC Endpoints for Database Subnets"
  type        = bool
  default     = false
}

variable "private_endpoints" {
  description = "Enable / Disable VPC Endpoints for Private Subnets"
  type        = bool
  default     = true
}

variable "public_endpoints" {
  description = "Enable / Disable VPC Endpoints for Public Subnets"
  type        = bool
  default     = false
}

variable "internal_endpoints" {
  description = "Enable / Disable VPC Endpoints for Internal Subnets"
  type        = bool
  default     = false
}

variable "s3_endpoint" {
  description = "Enable / Disable VPC Endpoint (Gateway) - S3"
  type        = bool
  default     = true
}

# --------------------------------------------------------------------------
# Private Subnets
# --------------------------------------------------------------------------
variable "private" {
  description = "Enable / Disable Private Subnets"
  type        = bool
  default     = true
}

variable "private_subnet_name" {
  description = "Name for Private subnets and dependent resources (will be prefixed with `var.name-`)"
  type        = string
  default     = "private"
}

variable "private_subnet_tags" {
  description = "Tags as map for Private subnets and dependent resources (preferably generated by terraform-null-label)"
  type        = map(string)
  default = {
    "type" = "private"
  }
}

# --------------------------------------------------------------------------
# Cache Subnets
# --------------------------------------------------------------------------
variable "cache" {
  description = "Enable / Disable Cache Subnets"
  type        = bool
  default     = false
}

variable "cache_subnet_name" {
  description = "Name for Cache subnets and dependent resources  (will be prefixed with `var.name-`)"
  type        = string
  default     = "cache"
}

variable "cache_subnet_tags" {
  description = "Tags as map for Cache subnets and dependent resources (preferably generated by terraform-null-label)"
  type        = map(string)
  default = {
    "type" = "cache"
  }
}

# --------------------------------------------------------------------------
# Database Subnets
# --------------------------------------------------------------------------
variable "db" {
  description = "Enable / Disable Database Subnets"
  type        = bool
  default     = false
}

variable "db_subnet_name" {
  description = "Name for Database subnets and dependent resources  (will be prefixed with `var.name-`)"
  type        = string
  default     = "database"
}

variable "db_subnet_tags" {
  description = "Tags as map for Database subnets and dependent resources (preferably generated by terraform-null-label)"
  type        = map(string)
  default = {
    "type" = "database"
  }
}

# --------------------------------------------------------------------------
# Internal (no internet) Subnets
# --------------------------------------------------------------------------
variable "internal" {
  description = "Enable / Disable Internal Subnets"
  type        = bool
  default     = false
}

variable "internal_subnet_name" {
  description = "Name for Internal subnets and dependent resources  (will be prefixed with `var.name-`)"
  type        = string
  default     = "internal"
}

variable "internal_subnet_tags" {
  description = "Tags as map for Internal subnets and dependent resources (preferably generated by terraform-null-label)"
  type        = map(string)
  default = {
    "type" = "internal"
  }
}

# --------------------------------------------------------------------------
# Public Subnets
# --------------------------------------------------------------------------
variable "public" {
  description = "Enable / Disable Public Subnets"
  type        = bool
  default     = true
}

variable "public_subnet_name" {
  description = "Name for Public subnets and dependent resources  (will be prefixed with `var.name-`)"
  type        = string
  default     = "public"
}

variable "public_subnet_tags" {
  description = "Tags as map for Public subnets and dependent resources (preferably generated by terraform-null-label)"
  type        = map(string)
  default = {
    "type" = "public"
  }
}
